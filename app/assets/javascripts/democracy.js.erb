$(function() {
	disegnaBottoni();
	
	if (window.location.hash) {
		setTimeout(function() {
			$(window.location.hash + " #commentcc").effect('highlight',{mode:'show'},3000)
		},500);
	}
	
});
function disegnaBottoni() {
	$('.buttonStyle').button();
	$('.fullEditButton').button({icons : {primary : "ui-icon-pencil"}});
	$('.editButton').button({icons : {primary : "ui-icon-pencil"},text : false});
	$('.deleteButton').button({icons : {primary : "ui-icon-circle-close"},text : false});
	$('.newButton').button({icons : {primary : "ui-icon-plusthick"}});
	$(".disableButton")
	    .bind("ajax:beforeSend", function() {
			$(this).hide();
			var toAdd = $('<div class="waitDiv"><%=image_tag "facebook-loader.gif", :alt => "loading..."%> </div>');
			toAdd.width($(this).outerWidth(true));
			toAdd.height($(this).outerHeight(true));
			$(this).after(toAdd);
	    })
	    .bind("ajax:complete", function() {
	    	$(this).show();
	    	$('.waitDiv').hide();
	    })
    /*
	$('.disableButton').click(function() {
	});*/
}

$.datepicker.setDefaults( $.datepicker.regional[ "it" ] );

function disegnaDatePicker() {
	$("#event_endtime").datetimepicker({
        dateFormat : "dd/mm/yy",
        buttonImageOnly : true,
        buttonImage : "<%= asset_path('iconCalendar.png') %>",
        showOn : "both",
        changeMonth : false,
        changeYear : false,
        yearRange : "c:c+10",
        minDate : -2,
        maxDate: "+10Y",
        duration: "",  
        showTime: true,  
        constrainInput: true,
        stepMinute: 15,  
        stepHour: 1,  
        altTimeField: "alt",  
        time24h: true,
        onClose: function(date) {
        	startTime = $("#event_starttime").datetimepicker("getDate");
        	endTime = $("#event_endtime").datetimepicker("getDate");
        	startDate = new Date(startTime);
        	endDate = new Date(endTime);
	        if (!(endDate.getTime() > startDate.getTime())) { 				
	 			$("#event_starttime").datetimepicker("setDate",endTime);
 			}
 			var diff =  Math.floor(( endDate - new Date()) / 86400000);
 			$("#event_starttime").datetimepicker("option","maxDate",diff+1); 			
        }
 	  });   
		
	$('#event_starttime').datetimepicker({
        dateFormat : "dd/mm/yy",
        buttonImageOnly : true,
        buttonImage : "<%= asset_path('iconCalendar.png') %>",
        showOn : "both",
        changeMonth : false,
        changeYear : false,
        yearRange : "c:c+10",
        minDate : -2,
        maxDate: "+10Y",
        duration: "",  
        showTime: true,  
        constrainInput: true,
        stepMinute: 15,  
        stepHour: 1,  
        altTimeField: "alt",  
        time24h: true,
        onClose: function(date) {
        	startTime = $("#event_starttime").datetimepicker("getDate");
        	endTime = $("#event_endtime").datetimepicker("getDate");
        	startDate = new Date(startTime);
        	endDate = new Date(endTime);
	        if (!(endDate.getTime() > startDate.getTime())) { 				
	 			$("#event_endtime").datetimepicker("setDate",startTime);
 			} 			
 			var diff =  Math.floor(( startDate - new Date()) / 86400000);
 			$("#event_endtime").datetimepicker("option","minDate",diff);
        }
     });
 }
 
 
 
function electionDatePicker() {
	$("#candidates_end_time").datetimepicker({
        dateFormat : "dd/mm/yy",
        buttonImageOnly : true,
        buttonImage : "<%= asset_path('iconCalendar.png') %>",
        showOn : "both",
        changeMonth : false,
        changeYear : false,
        yearRange : "c:c+10",
        minDate : -2,
        maxDate: "+10Y",
        duration: "",  
        showTime: true,  
        constrainInput: true,
        stepMinute: 15,  
        stepHour: 1,  
        altTimeField: "alt",  
        time24h: true,
        onClose: function(date) {
        	startTime = $("#groups_end_time").datetimepicker("getDate");
        	endTime = $("#candidates_end_time").datetimepicker("getDate");
        	startDate = new Date(startTime);
        	endDate = new Date(endTime);
	        if (!(endDate.getTime() > startDate.getTime())) { 				
	 			$("#groups_end_time").datetimepicker("setDate",endTime);
 			}
 			var diff =  Math.floor(( endDate - new Date()) / 86400000);
 			$("#groups_end_time").datetimepicker("option","maxDate",diff+1);			
        }
 	  });   
		
	$('#groups_end_time').datetimepicker({
        dateFormat : "dd/mm/yy",
        buttonImageOnly : true,
        buttonImage : "<%= asset_path('iconCalendar.png') %>",
        showOn : "both",
        changeMonth : false,
        changeYear : false,
        yearRange : "c:c+10",
        minDate : -2,
        maxDate: "+10Y",
        duration: "",  
        showTime: true,  
        constrainInput: true,
        stepMinute: 15,  
        stepHour: 1,  
        altTimeField: "alt",  
        time24h: true,
        onClose: function(date) {
        	startTime = $("#groups_end_time").datetimepicker("getDate");
        	endTime = $("#candidates_end_time").datetimepicker("getDate");
        	startDate = new Date(startTime);
        	endDate = new Date(endTime);
	        if (!(endDate.getTime() > startDate.getTime())) { 				
	 			$("#candidates_end_time").datetimepicker("setDate",startTime);
 			} 			
 			var diff =  Math.floor(( startDate - new Date()) / 86400000);
 			$("#candidates_end_time").datetimepicker("option","minDate",diff);
        }
   });
 }

function deleteMe(el) {
	$(el).remove();
}

function getURLParameter(name) {
    return decodeURIComponent(
        (location.search.match(RegExp("[?|&]"+name+'=(.+?)(&|$)'))||[,null])[1]
    );  
}


function array2dToJson(a, p, nl) {
  var i, j, s = '{"' + p + '":[';
  nl = nl || '';
  for (i = 0; i < a.length; ++i) {
    s += nl + array1dToJson(a[i]);
    if (i < a.length - 1) {
      s += ',';
    }
  }
  s += nl + ']}';
  return s;
}

function array1dToJson(a, p) {
  var i, s = '[';
  for (i = 0; i < a.length; ++i) {
    if (typeof a[i] == 'string') {
      s += '"' + a[i] + '"';
    }
    else { // assume number type
      s += a[i];
    }
    if (i < a.length - 1) {
      s += ',';
    }
  }
  s += ']';
  if (p) {
    return '{"' + p + '":' + s + '}';
  }
  return s;
}