/**
 * Se lo step delle proposte simili era stato saltato, saltalo anche quando torni indietro
 */
function skipIfNecessary(activeDiv) {
    if (activeDiv.attr('id') == 'suggestions' && skippedSuggestionStep) {
        $('#form-wizard-prev').click();
    }
}

/**
 * Mostra proposte simili se ve ne sono
 */
function showSimilarProposal(activeDiv) {
    $('#new_proposal').enableClientSideValidations();
    $(':input', activeDiv).first().focus();
    if (activeDiv.attr('id') == 'suggestions') {
        $.ajax({
            url: '<%=similar_proposals_path :group_id => params[:group_id]%>',
            data: 'tags=' + $('#proposal_tags_list').val()
        })
    }

}


window.ClientSideValidations.selectors = {
    inputs: ':input:not(button):not([type="submit"])[name]:enabled',
    validate_inputs: ':input:enabled:visible[data-validate]',
    forms: 'form[data-validate]'
};

var create_proposal_ = $('#create_proposal');
var container_ = $('#create_proposal_container');
container_.html('<%=j render "proposal_types/#{params[:proposal_type_id].downcase}"%>');
<%if params[:models] %>
    container_.dialog('option', 'title', '<%=j @title%>');
<%else%>
    container_.dialog({
        title: '<%=j @title%>',
        modal: true,
        width: 940,
        height: 'auto',
        close: function (event, ui) {
            create_proposal_.dialog('destroy');
        }
    });
<%end%>

$('.legend').hide();



$("#new_proposal").quickWizard({
    prevButton: '<button id="form-wizard-prev" type="button" class="btn backButton"><%=j t('buttons.go_back')%></button>',
    nextButton: '<button id="form-wizard-next" type="button" class="btn blue forwardButton"><%=j t('buttons.next')%></button>',
    nextCallback: showSimilarProposal,
    prevCallback: skipIfNecessary
});

input = $('#proposal_interest_borders_tkn')
input.tokenInput("<%=interest_borders_path(:format => :json)%>", {
    crossDomain: false,
    prePopulate: input.data("pre"),
    hintText: "<%=t('interest_borders.hint')%>",
    noResultsText: "<%=t('interest_borders.no_place_found')%>",
    searchingText: "<%=t('interest_borders.searching')%>",
    preventDuplicates: true,
    allowTabOut: true
});


input = $('#proposal_tags_list')
if (input != null) {
    input.tokenInput("<%=tags_path(format: :json )%>", {
        theme: "facebook",
        crossDomain: false,
        allowFreeTagging: true,
        minChars: 3,
        hintText: "<%=t('digit_tags')%>",
        searchingText: "<%=t('digit_tags')%>",
        preventDuplicates: true,
        allowTabOut: true,
        tokenValue: "name"
    })
}


$('#proposal_proposal_category_id').select2({
    minimumResultsForSearch: -1,
    formatResult: formatCategory,
    formatSelection: formatCategory,
    escapeMarkup: function(m) { return m; }
});




$('#new_proposal').enableClientSideValidations();
disegnaBottoni();