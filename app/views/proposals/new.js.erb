<%if LIMIT_PROPOSALS %>
<% max = current_user.proposals.maximum(:created_at) || Time.now - (PROPOSALS_TIME_LIMIT + 1.seconds)%>
<% elapsed = Time.now - max %>
<%if elapsed < PROPOSALS_TIME_LIMIT%>
alert('Devono passare 2 minuti tra una proposta e l\'altra\nAttendi ancora <%= ((PROPOSALS_TIME_LIMIT - elapsed)/60).floor%> minuti e <%= ((PROPOSALS_TIME_LIMIT - elapsed)%60).round(0)%> secondi.');
<%end%>
<%else%>

/**
 * Se lo step delle proposte simili era stato saltato, saltalo anche quando torni indietro
 */
function skipIfNecessary(activeDiv) {
    if (activeDiv.attr('id') == 'suggestions' && skippedSuggestionStep) {
        $('#form-wizard-prev').click();
    }
}

/**
 * Mostra proposte simili se ve ne sono
 */
function showSimilarProposal(activeDiv) {
    $('#new_proposal').enableClientSideValidations();
    $(':input', activeDiv).first().focus();
    if (activeDiv.attr('id') == 'suggestions') {
        $.ajax({
            url: '<%=similar_proposals_path :group_id => params[:group_id]%>',
            data: 'tags=' + $('#proposal_tags_list').val()
        })
    }

}

window.ClientSideValidations.selectors = {
    inputs: ':input:not(button):not([type="submit"])[name]:enabled',
    validate_inputs: ':input:enabled:visible[data-validate]',
    forms: 'form[data-validate]'
};


var container_ = $('#create_proposal_container');
container_.html('<%=j render "proposal_types/#{params[:proposal_type_id].downcase}"%>');
<%if params[:models] %>
    container_.dialog('option', 'title', '<%=j @title%>');
<%else%>
    container_.dialog({
        title: '<%=j @title%>',
        modal: true,
        width: 720,
        height: 'auto',
        close: function (event, ui) {
            create_proposal_.dialog('destroy');
        }
    });
<%end%>

$('.legend').hide();



$("#new_proposal").quickWizard({
    nextCallback: showSimilarProposal,
    prevCallback: skipIfNecessary
});

input = $('#proposal_interest_borders_tkn')
input.tokenInput("<%=interest_borders_path(:format => :json)%>", {
    crossDomain: false,
    prePopulate: input.data("pre"),
    hintText: "<%=t('interest_borders_hint')%>",
    noResultsText: "<%=t('no_interest_border')%>",
    searchingText: "<%=t('looking_for_interest_border')%>",
    preventDuplicates: true
});


input = $('#proposal_tags_list')
if (input != null) {
    input.tokenInput([], {
        theme: "facebook",
        crossDomain: false,
        allowFreeTagging: true,
        hintText: "<%=t('digit_tags')%>",
        searchingText: "<%=t('digit_tags')%>",
        preventDuplicates: true
    })
}

var create_proposal_ = $('#create_proposal');


$('#new_proposal').enableClientSideValidations();
disegnaBottoni();

$('.ddslick2').ddslick({
        width: 400,
        onSelected: function(data) {
            var exlanation_ = $('#proposal_quorum_id option:selected').data('explanation');
            console.log('selected: ' + exlanation_);
            if (exlanation_) {
              $('#quorum_explanation').html(exlanation_).show();
            }
            else {
              $('#quorum_explanation').hide();
            }
        }
});

$('#proposal_quorum_id_container').css('float','left');


//window.ClientSideValidations.forms['new_proposal'].validators['proposal[sections_attributes][][paragraphs_attributes][][content]']['presence'] = [{'message':'deve essere compilato'}];


tinyMCE.init({
    mode: 'textareas',
    theme: 'advanced',
    theme_advanced_toolbar_location: 'top',
    theme_advanced_toolbar_align: 'left',
    theme_advanced_buttons1: 'bold,italic,underline,separator,undo,redo,separator,bullist,numlist,separator,link,unlink,anchor,image,youtube',
    theme_advanced_buttons2: '',
    theme_advanced_buttons3: '',
    relative_urls: false,
    plugins: 'legacyoutput,media,inlinepopups,youtube,paste',
    formats: {
        underline: { inline: 'u' }
    },
    paste_auto_cleanup_on_paste: true,
    theme_advanced_statusbar_location: "none"
});


<%end%>